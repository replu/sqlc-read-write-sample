// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: user.sql

package sqlc

import (
	"context"
	"database/sql"
)

const userCreate = `-- name: UserCreate :execresult
INSERT INTO users(
    name
) VALUE (
  ?
)
`

func (q *Queries) UserCreate(ctx context.Context, db DBTX, name string) (sql.Result, error) {
	return db.ExecContext(ctx, userCreate, name)
}

const userGet = `-- name: UserGet :one
SELECT id, name, created_at, updated_at
FROM users
WHERE
  id = ?
`

func (q *Queries) UserGet(ctx context.Context, db DBTX, id uint64) (User, error) {
	row := db.QueryRowContext(ctx, userGet, id)
	var i User
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
